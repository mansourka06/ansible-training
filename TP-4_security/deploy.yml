---
- name: "Apache installation using docker"
  hosts: prod
  become: yes

  # replaced by rsa key authentication
  # vars_files:
  #   - files/secrets/credentials.yml
  
  pre_tasks:
    - name: "Install some packages"
      package:
        name: '{{ item }}'
        state: present
      loop:
        - epel-release
        - wget
        - git
      when: ansible_distribution == "CentOS"

    - name: "Download pip script"
      get_url:
        url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
        dest: /tmp/get-pip.py

    - name: "Install python-pip"
      command: python2.7 /tmp/get-pip.py

    - name: "Create a symbolic link for pip"
      file:
        force: yes
        src: /usr/local/bin/pip
        dest: /usr/bin/pip
        state: link

    - name: Install docker python
      pip:
        name: docker-py

    - name: Install Docker dependencies
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present
      when: ansible_os_family == "RedHat"

    - name: "Add Docker repository"
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
      when: ansible_os_family == "RedHat"

    - name: "Install Docker"
      yum:
        name: docker-ce
        state: present
      when: ansible_os_family == "RedHat"

    - name: "Start Docker service"
      systemd:
        name: docker
        state: started
        enabled: yes

  tasks:
    - name: "Copy website template file"
      template:
        src: index.html.j2
        dest: /home/vagrant/index.html

    - name: "Create Apache container"
      docker_container:
        name: webapp
        image: httpd
        ports:
          - "8080:80"
        volumes:
          - /home/vagrant/index.html:/usr/local/apache2/htdocs/index.html

    # Test site accessibility
    - name: "Waiting for all containers to start up and website to be accessible"
      wait_for:
        host: localhost
        port: 8080
        timeout: 180
      register: host_accessible
      failed_when: False

    - debug:
        msg: "Site is reachable"
      when: host_accessible.state is defined and host_accessible.state == "started"

    - debug:
        msg: "Site is NOT reachable"
      when: host_accessible.state is defined and host_accessible.state == "stopped"

...